---
import { Image } from 'astro:assets'

import RowIcon from '@assets/icons/RowIcon.astro'
import GitHubIcon from '@assets/icons/GitHubIcon.astro'

import type { FeaturedProject } from '@types/featuredProjects'

import Tags from '@components/general/Tags.astro'

interface Props extends FeaturedProject {}

const {
  title,
  description,
  github,
  url,
  icon_technology: Icon,
  url_technology,
  tags,
  logo,
} = Astro.props
---

<article
  class='article-featured-projects relative border-[1px] border-base-300 rounded-md p-4 grid md:grid-rows-3 gap-1 overflow-hidden'
>
  <header class='flex justify-between items-center'>
    <div class='flex items-center gap-3'>
      <div class='size-6 rounded-lg overflow-hidden'>
        <Image src={logo} alt={title} width={100} height={100} />
      </div>
      <a
        href={url}
        target='_blank'
        rel='noopener noreferrer'
        class='group flex gap-1 text-lg font-medium items-center hover:underline decoration-dotted underline-offset-4 text-primary-content'
      >
        <span class='lowercase'>{title}</span>
        <RowIcon
          width='12'
          styles='-rotate-45 group-hover:scale-125 transition-transform duration-200'
        />
      </a>
    </div>
    <div>
      <a
        href={github}
        target='_blank'
        rel='noopener noreferrer'
        class='opacity-80 hover:opacity-100'
      >
        <GitHubIcon width='18' />
      </a>
    </div>
  </header>

  <main
    class='flex items-center text-sm text-pretty tracking-tight text-primary'
  >
    <p>{description}</p>
  </main>

  <footer class='hidden md:flex gap-3 items-center'>
    <a href={url_technology} target='_blank' rel='noopener noreferrer'>
      <Icon width='18' height='18' />
    </a>
    <div class='flex gap-1 flex-wrap cursor-context-menu'>
      {tags.map((name: string) => <Tags>{name}</Tags>)}
    </div>
  </footer>

  <div class='circle-shadow'></div>
  <!-- <input
    aria-hidden='true'
    class='pointer-events-none absolute left-0 top-0 z-10 h-full w-full cursor-default rounded-[0.310rem] border transition-opacity duration-500 placeholder:select-none
    border-white/50'
    style='
      opacity: 1;
      -webkit-mask-image: radial-gradient(30% 30px at 0px 0px, black 45%, transparent);
      background-color: transparent;
    '
  /> -->
</article>

<style>
  .circle-shadow {
    background: rgb(31, 31, 31);
    background: radial-gradient(
      circle,
      rgba(70, 68, 68, 0.1) 0%,
      rgba(70, 68, 68, 0.05) 20%,
      rgba(70, 68, 68, 0) 60%
    );
    border-radius: 50%;
    width: 600px;
    height: 600px;
    position: absolute;
    z-index: -1;
    opacity: 0;
    transition: opacity 0.3s ease-in-out;
  }
</style>

<script>
  const article = document.querySelectorAll(
    '.article-featured-projects'
  ) as NodeListOf<HTMLElement>

  article.forEach(el => {
    el.addEventListener('mouseover', e => {
      const circleShadow = el.querySelector('.circle-shadow') as HTMLDivElement
      circleShadow.style.opacity = '1'
    })

    el.addEventListener('mouseout', e => {
      const circleShadow = el.querySelector('.circle-shadow') as HTMLDivElement
      circleShadow.style.opacity = '0'
    })

    el.addEventListener('mousemove', e => {
      const circleShadow = el.querySelector('.circle-shadow') as HTMLDivElement
      circleShadow.style.left = `${e.layerX - 300}px`
      circleShadow.style.top = `${e.layerY - 300}px`
    })
  })
</script>
